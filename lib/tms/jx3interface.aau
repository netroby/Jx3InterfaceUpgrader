//插件管理
namespace tms.jx3interface{
	import fsys;
	import string;
	import string.xml;
	import inet.http;
	import web.json;
	import string.regex;
	import preg;
	import table;
	import time;
	import tms.application.version;
	getGamePath = function(){ return string.trimright(..web.layout.ui.getGamePath(),"\/") + "\"; };
	getInterfacePath = function(){ return string.concat(getGamePath(),"Interface\"); };
	isGamePath = function(sGamePath){
		if(!sGamePath) return false;
		sGamePath = string.trimright(sGamePath,"\/") + "\";
		if((!..io.exist(sGamePath+"gameupdater.exe"))&&(!..io.exist(sGamePath+"JX3Client.exe"))) return false;
		return true;
	};
	
	getCount = function(sInterfacePath){
		if(!sInterfacePath) sInterfacePath = getInterfacePath();
		if(!..io.exist(sInterfacePath)) return null;
		var nCount = 0;
		fsys.enum( sInterfacePath, "*",
			function(dir,filename,fullpath,findData){
				if(dir&&..io.exist(fullpath+"\info.ini")) {nCount=nCount+1;}
			} 
			,false/*如果此参数为false则忽略子目录*/
		);
		return nCount;		
	};
	getList = function(sInterfacePath){
		if(!sInterfacePath) sInterfacePath = getInterfacePath();
		if(!..io.exist(sInterfacePath)) return null;
		var tRet = {}
		var nCount = 0;
		fsys.enum( sInterfacePath, "*",
			function(dir,filename,fullpath,findData){
				if(dir&&..io.exist(fullpath+"\info.ini")) {nCount=nCount+1;}
			} 
			,false/*如果此参数为false则忽略子目录*/
		);
		return nCount;	
	};
	each = function(sInterfacePath,fnEach){
		var t = type(sInterfacePath);
		if( t == "string" ) {
			if(!sInterfacePath) sInterfacePath = getInterfacePath();
		} elseif( t == "function" ) {
			fnEach = sInterfacePath;
			sInterfacePath = getInterfacePath();
		} else { return null; }
		if(!..io.exist(sInterfacePath)) return null;
		fsys.enum( sInterfacePath, "*",
			function(dir,filename,fullpath,findData){
				if(dir) {
					var tInfo = getInfo(sInterfacePath, dir);
					if(tInfo) fnEach(tInfo);
				}
			} 
			,false/*如果此参数为false则忽略子目录*/
		);
		return nCount;	
	};
	/**
	 * 获取插件info
	**/
	getInfo = function(sInterfacePath,sInterfaceName){
		var t = type(sInterfaceName);
		if( t == "string" ) {
			if(!sInterfacePath) sInterfacePath = getInterfacePath();
		} else {
			sInterfaceName = sInterfacePath;
			sInterfacePath = getInterfacePath();
		}
		var iniPath = string.concat(string.trimright(sInterfacePath,"\/"),"\",sInterfaceName,"\info.ini");
		if(!..io.exist(iniPath)) return null; 
		var iniObj = fsys.ini(iniPath);
		if(!iniObj) return null;
		
		var id = sInterfaceName;
		var name = iniObj.read(sInterfaceName,"name","");
		var desc = iniObj.read(sInterfaceName,"desc","");
		var version = iniObj.read(sInterfaceName,"version","");
		var version_org = iniObj.read(sInterfaceName,"version_org","");
		
		return { id=id; name=tostring(name); desc=desc; version=version; version_org=version_org };
	}
	/**
	 * 获取插件是否有更新
	**/
	updateCheck = function(tInfo){
		var bNewVersion = false;
		var http = inet.http(); http.setTimeouts(3000,3000,30000);
		var regexp = string.regex();
		var szCurrentVersion = ""; var szLatestVersion = "";
		select(tInfo.id) {
			case "RaidGrid_EventScrutiny" {
				try{
					for i,regex_match in regexp.gmatch(tInfo.name, "^.*?(\d+\.[\d\.abcdeABCDE]+).*?$"){ szCurrentVersion = regex_match.SubMatches(0); }
					var json = http.get( string.format("http://api.j3ui.com/version.json?_=%d", time.now().milliseconds) );
					var tData = web.json.parse(json);
					if( type(tData)=="table" ) { szLatestVersion = tData.version }
					if( tms.application.version.compare( szLatestVersion, szCurrentVersion ) > 0 ) bNewVersion = true;
					
					..io.print(string.format("%s %s %s", tInfo.id, szCurrentVersion, szLatestVersion))
				}
			}
			case "HM" {
				try{
					for i,regex_match in regexp.gmatch(tInfo.name, "^.*?(\d+\.[\d\.abcdeABCDE]+).*?$"){ szCurrentVersion = regex_match.SubMatches(0); }
					var s_xml = http.get( string.format("http://jx3.hightman.cn/sync/sync.xml?_=%d", time.now().milliseconds) );
					var xml = string.xml(s_xml);
					szLatestVersion = xml.queryEles(
						tagName = "jx3:hm";
					)[1].queryEles(
						tagName = "version";
					)[1].innerText()
					if( tms.application.version.compare( szLatestVersion, szCurrentVersion ) > 0 ) bNewVersion = true;
					..io.print(string.format("%s %s %s", tInfo.id, szCurrentVersion, szLatestVersion))
				}
			}
			case "a_YYL_Macro" {
				try{
					for i,regex_match in regexp.gmatch(tInfo.name, "^.*?(\d+\.[\d\.abcdeABCDE]+).*?$"){ szCurrentVersion = regex_match.SubMatches(0); }
					for i,regex_match in regexp.gmatch(http.get(string.format("http://www.yylmacro.com/down/a_YYL_Macro/version.txt?_=%d",time.now().milliseconds)), "^.*?(\d+\.[\d\.abcdeABCDE]+).*?$"){ szLatestVersion = regex_match.SubMatches(0); }
					if( tms.application.version.compare( szLatestVersion, szCurrentVersion ) > 0 ) bNewVersion = true;
					..io.print(string.format("%s %s %s", tInfo.id, szCurrentVersion, szLatestVersion))
				}
			}
			case "AH" {
				try{
					for i,regex_match in regexp.gmatch(tInfo.desc, "^.*?(\d+\.[\d\.abcdeABCDE]+).*?$"){ szCurrentVersion = regex_match.SubMatches(0); }
					for i,regex_match in regexp.gmatch(http.get(string.format("http://jx3auction.duapp.com/verify?uid=tms_updater&version=%s&_=%d",szCurrentVersion, time.now().milliseconds)), "^.*?(\d+\.[\d\.abcdeABCDE]+).*?$"){ szLatestVersion = regex_match.SubMatches(0); }
					if( tms.application.version.compare( szLatestVersion, szCurrentVersion ) > 0 ) bNewVersion = true;
					..io.print(string.format("%s %s %s", tInfo.id, szCurrentVersion, szLatestVersion))
				}
			}
			case "TMS" {
				..io.print(tInfo.id)
			}
			case "RaidGrid_EventScrutiny" {
				..io.print(tInfo.id)
			}
			else {
			}
		}
		return bNewVersion;
	};
}

/**intellisense()
tms.jx3interface.getInfo(. ("Interface目录","插件目录名称") = table { name=name; desc=desc; version=version; version_org=version_org }
tms.jx3interface.getInfo(. ("插件目录名称") = table { name=name; desc=desc; version=version; version_org=version_org }
tms.jx3interface.each(. ("Interface目录",function(tInfo){
	_/*{ name=name; desc=desc; version=version; version_org=version_org }*/
}
tms.jx3interface.each(. (function(tInfo){
	_/*{ name=name; desc=desc; version=version; version_org=version_org }*/
}
end intellisense**/