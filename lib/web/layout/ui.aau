//ui 界面数据
namespace web.layout.ui{
	import thread;
    import thread.command;
	var threadCommand = thread.command( ..winform );
	// 界面操作
    setText = function(szEleQuery,szText){ var ele = ..wbLayout.queryEle(szEleQuery); if(ele) ele.innerText = tostring(szText); };
	getText = function(szEleQuery){ var ele = ..wbLayout.queryEle(szEleQuery); if(ele) return ele.innerText; else return null; };
	//目录设定
	setGamePath = function(szText){ setText("#txtGamePath",szText);thread.set("szGamePath", szText);}
	getGamePath = function(){ return thread.get("szGamePath"); }
	//主提示框设定
	setMainTips = function(nTotalCount,nCanUpdateCount){
        thread.command.post(hwnd,"SetText","#tipInterfaceSummary",..string.format("检测到%d个插件，%d个可更新。",nTotalCount,nCanUpdateCount));
		//..wbLayout.queryEle("#tipInterfaceSummary").value = ..string.format("检测到%d个插件，%d个可更新。",nTotalCount,nCanUpdateCount);
	}
	initThreadCommand = function(){
		threadCommand.SetText = function(szEleQuery,szText){
			var ele = ..wbLayout.queryEle(szEleQuery)
			if(ele) ele.innerText = tostring(szText)
		};
		threadCommand.GetText = function(szEleQuery){
			var ele = ..wbLayout.queryEle(szEleQuery)
			if(ele) return ele.innerText;
			return null;
		};
		threadCommand.szGamePath = function(szText){ if(szText){..web.layout.ui.setText("#txtGamePath",szText);thread.set("szGamePath", szText);} else return thread.get("szGamePath");}
		threadCommand.szMainTips = function(szText){ if(szText)..web.layout.ui.setText("#tipMainTips",szText); else return ..web.layout.ui.getText("#tipMainTips"); }
		threadCommand.szHMFeature = function(szText){ if(szText)..web.layout.ui.setText("#boxHMFeature",szText); else return ..web.layout.ui.getText("#boxHMFeature"); }
		
	}
	initUiAnsy = function(hwnd){
		thread.create( function( hwnd ){ try {
			import preg; import thread.command; import inet.http;
			var http = inet.http(); http.setTimeouts(3000,3000,3000);
			// 海鳗
			thread.command.post(hwnd,"szHMFeature","loading...");
			var html = http.get(string.format("http://jx3.hightman.cn/sync/changelog.html?_=%d", time.now().milliseconds));
			var regex,err = preg("/<pre>(.*?)</pre>/s");
			var $keywords,j = regex.match (  string.fromto(html) );
			thread.command.post(hwnd,"szHMFeature",$keywords);
		} },hwnd );
		thread.create( function( hwnd ){ //try {
			import preg; import thread.command; import inet.http;import web.json;import table;
			var http = inet.http(); http.setTimeouts(3000,3000,3000);
			// 团队事件监控
			thread.command.post(hwnd,"szHMFeature","loading...");
			var s_json = http.get(string.format("http://api.j3ui.com/version.json?_=%d", time.now().milliseconds));
			var json = web.json.parse(s_json);
			var s_jsoncfg = http.get(string.format("%s?_=%d", json.cfg, time.now().milliseconds));
			var jsoncfg = web.json.parse(s_jsoncfg);
			io.print("top")
			for(i=1;table.count(jsoncfg.top);1){
				//..io.print(jsoncfg.top[i].title);
			}
			io.print("usua")
			for(i=1;table.count(jsoncfg.usually);1){
				//..io.print(jsoncfg.usually[i].title);
			}
			
			//..io.print(s_jsoncfg);
			thread.command.post(hwnd,"SetText","#divJ3uiSelectConfigPanel",s_jsoncfg);
		 },hwnd );
	}
	
}
